// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParksApi.Models;

namespace ParksApi.Migrations
{
    [DbContext(typeof(ParksApiContext))]
    [Migration("20200403180556_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ParksApi.Models.NationalPark", b =>
                {
                    b.Property<int>("NationalParkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NationalParkCity");

                    b.Property<string>("NationalParkDescription");

                    b.Property<string>("NationalParkName");

                    b.Property<string>("NationalParkState");

                    b.HasKey("NationalParkId");

                    b.ToTable("NationalParks");

                    b.HasData(
                        new
                        {
                            NationalParkId = 1,
                            NationalParkCity = "NatCity 1",
                            NationalParkDescription = "NatDesc 1",
                            NationalParkName = "National 1",
                            NationalParkState = "NatState 1"
                        },
                        new
                        {
                            NationalParkId = 2,
                            NationalParkCity = "NatCity 2",
                            NationalParkDescription = "NatDesc 2",
                            NationalParkName = "National 2",
                            NationalParkState = "NatState 2"
                        },
                        new
                        {
                            NationalParkId = 3,
                            NationalParkCity = "NatCity 3",
                            NationalParkDescription = "NatDesc 3",
                            NationalParkName = "National 3",
                            NationalParkState = "NatState 3"
                        },
                        new
                        {
                            NationalParkId = 4,
                            NationalParkCity = "NatCity 4",
                            NationalParkDescription = "NatDesc 4",
                            NationalParkName = "National 4",
                            NationalParkState = "NatState 4"
                        },
                        new
                        {
                            NationalParkId = 5,
                            NationalParkCity = "NatCity 5",
                            NationalParkDescription = "NatDesc 5",
                            NationalParkName = "National 5",
                            NationalParkState = "NatState 5"
                        });
                });

            modelBuilder.Entity("ParksApi.Models.StatePark", b =>
                {
                    b.Property<int>("StateParkId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("NationalParkId");

                    b.Property<string>("StateParkCity")
                        .IsRequired();

                    b.Property<string>("StateParkDescription");

                    b.Property<string>("StateParkName")
                        .IsRequired();

                    b.Property<string>("StateParkState")
                        .IsRequired();

                    b.HasKey("StateParkId");

                    b.HasIndex("NationalParkId");

                    b.ToTable("StateParks");

                    b.HasData(
                        new
                        {
                            StateParkId = 1,
                            StateParkCity = "StateCity 1",
                            StateParkDescription = "State Description 1",
                            StateParkName = "State 1",
                            StateParkState = "StateState 1"
                        },
                        new
                        {
                            StateParkId = 2,
                            StateParkCity = "StateCity 2",
                            StateParkDescription = "State Description 2",
                            StateParkName = "State 2",
                            StateParkState = "StateState 2"
                        },
                        new
                        {
                            StateParkId = 3,
                            StateParkCity = "StateCity 3",
                            StateParkDescription = "State Description 3",
                            StateParkName = "State 3",
                            StateParkState = "StateState 3"
                        },
                        new
                        {
                            StateParkId = 4,
                            StateParkCity = "StateCity 4",
                            StateParkDescription = "State Description 4",
                            StateParkName = "State 4",
                            StateParkState = "StateState 4"
                        },
                        new
                        {
                            StateParkId = 5,
                            StateParkCity = "StateCity 5",
                            StateParkDescription = "State Description 5",
                            StateParkName = "State 5",
                            StateParkState = "StateState 5"
                        });
                });

            modelBuilder.Entity("ParksApi.Models.StatePark", b =>
                {
                    b.HasOne("ParksApi.Models.NationalPark")
                        .WithMany("StateParks")
                        .HasForeignKey("NationalParkId");
                });
#pragma warning restore 612, 618
        }
    }
}
